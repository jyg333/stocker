plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.stocker'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.2.0' // 또는 최신 버전

	//JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.12.6'
	// temp password
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	// encryption
	implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.70'
	//@Valid 제약 조건사용
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.springframework.security', name: 'spring-security-web', version: '6.3.0'
	implementation group: 'org.springframework.security', name: 'spring-security-config', version: '6.3.0'
	// log4j 적용
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation('org.springframework.boot:spring-boot-starter') {
		exclude group: 'ch.qos.logback'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
